var documenterSearchIndex = {"docs":
[{"location":"#","page":"Home","title":"Home","text":"CurrentModule = PovertyAndInequalityMeasures","category":"page"},{"location":"#PovertyAndInequalityMeasures-1","page":"Home","title":"PovertyAndInequalityMeasures","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [PovertyAndInequalityMeasures]","category":"page"},{"location":"#PovertyAndInequalityMeasures.add_decomposed_theil-Tuple{Dict{Symbol,Any},Array{Dict{Symbol,Any},1}}","page":"Home","title":"PovertyAndInequalityMeasures.add_decomposed_theil","text":"Make a wee dict with :theilbetween and :theilwithin See WB eqns 6.7/6.8. TODO\n\nthere are some papers on decomposing Atkinson, but I\n\ndon't understand them ..\n\nthe over time 3-part version\n\npopindic : Inequal for the population as a whole  subindices : an array of dics, one for each subgroup of interest\n\n\n\n\n\n","category":"method"},{"location":"#PovertyAndInequalityMeasures.binify","page":"Home","title":"PovertyAndInequalityMeasures.binify","text":"Chop a dataset with populations and incomes into numbins groups in a form suitable for e.g. a Gini curve.\n\ncol1 is cumulative population,\n2 cumulative income/whatever,\n3 threshold income level.\n\n\n\n\n\n","category":"function"},{"location":"#PovertyAndInequalityMeasures.binify-Tuple{Any,Integer,Symbol,Symbol}","page":"Home","title":"PovertyAndInequalityMeasures.binify","text":"As above, but using any DataFrame like thing that supports the TableTraits.isiterabletable interface\n\n\n\n\n\n","category":"method"},{"location":"#PovertyAndInequalityMeasures.make_gini-Tuple{Array{Float64,2}}","page":"Home","title":"PovertyAndInequalityMeasures.make_gini","text":"calculate a Gini coefficient on one of our sorted arrays\n\n\n\n\n\n","category":"method"},{"location":"#PovertyAndInequalityMeasures.make_inequality","page":"Home","title":"PovertyAndInequalityMeasures.make_inequality","text":"As above but using the iterable table interface; see: https://github.com/queryverse/IterableTables.jl weightcol and incomecol are names of columns\n\n\n\n\n\n","category":"function"},{"location":"#PovertyAndInequalityMeasures.make_inequality","page":"Home","title":"PovertyAndInequalityMeasures.make_inequality","text":"Make a dictionary of inequality measures. This is mainly taken from chs 5 and 6 of the World Bank book.\n\nrawdata a matrix with cols with weights and incomes\natkinson_es inequality aversion values for the Atkinson indexes\ngeneralised_entropy_alphas\nweightpos - column with weights\nincomepos - column with incomes\n\n\n\n\n\n","category":"function"},{"location":"#PovertyAndInequalityMeasures.make_poverty","page":"Home","title":"PovertyAndInequalityMeasures.make_poverty","text":"As above, but using the QueryVerse IterableTables interface rawdata - basically anything resembling a dataframe; see: [https://github.com/queryverse/IterableTables.jl] throws an exception if rawdata doesn't support iterabletable interface\n\n\n\n\n\n","category":"function"},{"location":"#PovertyAndInequalityMeasures.make_poverty","page":"Home","title":"PovertyAndInequalityMeasures.make_poverty","text":"Create a dictionary of poverty measures.\n\nThis is based on the World Bank's Poverty Handbook by  Haughton and Khandker.\n\nArguments:\n\nrawdata - an nxm array of real nunbers; each row is an observation; one col should be a weight, another is income;  positions assumed to be 1 and 2 unless weight and incomepos are supplied\nline - a poverty line, assumed same for all obs (so income is assumed to be already equivalised)\nfoster_greer_thorndyke_alphas - coefficients for FGT poverty measures; note that FGT(0)  corresponds to headcount and FGT(1) to gap; count and gap are computed directly anyway  but it's worth checking one against the other.\ngrowth is (e.g.) 0.01 for 1% per period, and is used for 'time to exit' measure.\n\n\n\n\n\n","category":"function"},{"location":"#PovertyAndInequalityMeasures.make_all_below_line-Tuple{Array{Float64,2},Float64}","page":"Home","title":"PovertyAndInequalityMeasures.make_all_below_line","text":"generate a subset of one of our datasets with just the elements whose incomes are below the line. Probably possible in 1 line, once I get the hang of this a bit more.\n\n\n\n\n\n","category":"method"},{"location":"#PovertyAndInequalityMeasures.make_augmented","page":"Home","title":"PovertyAndInequalityMeasures.make_augmented","text":"internal function that makes a sorted array with cumulative income and population added\n\n\n\n\n\n","category":"function"},{"location":"#PovertyAndInequalityMeasures.make_augmented","page":"Home","title":"PovertyAndInequalityMeasures.make_augmented","text":"internal function that makes a sorted array with cumulative income and population added\n\n\n\n\n\n","category":"function"},{"location":"#PovertyAndInequalityMeasures.make_inequalityinternal-Tuple{}","page":"Home","title":"PovertyAndInequalityMeasures.make_inequalityinternal","text":"Make a dictionary of inequality measures. This is mainly taken from chs 5 and 6 of the World Bank book.\n\nrawdata a matrix with cols with weights and incomes\natkinson_es inequality aversion values for the Atkinson indexes\ngeneralised_entropy_alphas\nweightpos - column with weights\nincomepos - column with incomes\n\n\n\n\n\n","category":"method"},{"location":"#PovertyAndInequalityMeasures.make_povertyinternal-Tuple{}","page":"Home","title":"PovertyAndInequalityMeasures.make_povertyinternal","text":"Internal version, once we have our datatset\n\n\n\n\n\n","category":"method"}]
}
